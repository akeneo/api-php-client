apiVersion: v1
kind: Pod
metadata:
  name: test-php-api-client-pim20
spec:
  initContainers:
    - name: php-api-client-data
      # Choose one of the following image (Be sure to build and push it on GCR before)
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_curl-client_guzzlehttp_psr7_php-5.6:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_curl-client_guzzlehttp_psr7_php-7.0:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_curl-client_guzzlehttp_psr7_php-7.1:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_curl-client_slim_slim_php-5.6:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_curl-client_slim_slim_php-7.0:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_curl-client_slim_slim_php-7.1:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_curl-client_zendframework_zend-diactoros_php-5.6:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_curl-client_zendframework_zend-diactoros_php-7.0:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_curl-client_zendframework_zend-diactoros_php-7.1:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_guzzle5-adapter_guzzlehttp_psr7_php-5.6:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_guzzle5-adapter_guzzlehttp_psr7_php-7.0:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_guzzle5-adapter_guzzlehttp_psr7_php-7.1:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_guzzle5-adapter_slim_slim_php-5.6:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_guzzle5-adapter_slim_slim_php-7.0:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_guzzle5-adapter_slim_slim_php-7.1:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_guzzle5-adapter_zendframework_zend-diactoros_php-5.6:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_guzzle5-adapter_zendframework_zend-diactoros_php-7.0:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_guzzle5-adapter_zendframework_zend-diactoros_php-7.1:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_guzzle6-adapter_guzzlehttp_psr7_php-5.6:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_guzzle6-adapter_guzzlehttp_psr7_php-7.0:dev
      # image: eu.gcr.io/akeneo-ci/php-api-client/php-http_guzzle6-adapter_guzzlehttp_psr7_php-7.1:dev
      imagePullPolicy: Always
      command: ['sh', '-c', 'mkdir -p /home/jenkins/php-api-client && cp -Rp /data/. /home/jenkins/php-api-client']
      volumeMounts:
        - { mountPath: /home/jenkins, name: pim }
    - name: pim-community-dev-data
      # Be sure image is fresh and available on GCR
      image: eu.gcr.io/akeneo-ci/php-api-client/pim_community_dev_master:dev
      imagePullPolicy: Always
      command: ['sh', '-c', 'mkdir -p /home/jenkins/pim && cp -Rp /data/. /home/jenkins/pim']
      volumeMounts:
        - { mountPath: /home/jenkins, name: pim }
  hostAliases:
  - ip: "127.0.0.1"
    hostnames:
    - "akeneo"
    - "akeneo.dev"
    - "akeneo-pim"
    - "mysql"
  containers:
    - name: mysql
      image: eu.gcr.io/akeneo-ci/mysql:5.7
      imagePullPolicy: Always
      env:
        - { name: MYSQL_ROOT_PASSWORD, value: root }
        - { name: MYSQL_USER, value: akeneo_pim }
        - { name: MYSQL_PASSWORD, value: akeneo_pim }
        - { name: MYSQL_DATABASE, value: akeneo_pim }
      readinessProbe:
        timeoutSeconds: 5
        initialDelaySeconds: 5
        failureThreshold: 30
        exec:
          command: ["mysql", "-proot", "-h", "127.0.0.1", "-e", "SELECT 1"]
      volumeMounts:
        - { name: tmp-pod, mountPath: /tmp/pod, readOnly: true }
      resources:
        requests: {cpu: "100m", memory: "700Mi"}
    - name: php-api
      image: akeneo/apache-php:php-5.6
      command: ["/bin/bash", "-c"]
      args:
        - |
          tail -f /dev/null &
          CHILD_PID=$!
          (while true; do if [[ -f "/tmp/pod/main-terminated" ]]; then kill $CHILD_PID; fi; sleep 1; done) &
          wait $CHILD_PID
          if [[ -f "/tmp/pod/main-terminated" ]]; then exit 0; fi
      workingDir: /home/jenkins/php-api-client
      volumeMounts:
        - { name: pim, mountPath: /home/jenkins }
        - { name: tmp-pod, mountPath: /tmp/pod, readOnly: true }
        - { name: docker-socket, mountPath: /var/run/docker.sock }
        - { name: docker-exec, mountPath: /usr/bin/docker }
      resources:
        requests: {cpu: "300m", memory: "300Mi"}
    - name: php
      image: eu.gcr.io/akeneo-ci/php:7.1-fpm
      imagePullPolicy: Always
      command: ["/bin/bash", "-c"]
      args:
        - |
          php-fpm &
          CHILD_PID=$!
          (while true; do if [[ -f "/tmp/pod/main-terminated" ]]; then kill $CHILD_PID; fi; sleep 1; done) &
          wait $CHILD_PID
          if [[ -f "/tmp/pod/main-terminated" ]]; then exit 0; fi
      workingDir: /home/jenkins/pim
      volumeMounts:
        - { name: pim, mountPath: /home/jenkins }
        - { name: tmp-pod, mountPath: /tmp/pod, readOnly: true }
      resources:
        requests: {cpu: "300m", memory: "300Mi"}
    - name: httpd
      image: eu.gcr.io/akeneo-ci/httpd:2.4
      command: ["/bin/bash", "-c"]
      args:
        - |
          httpd-foreground &
          CHILD_PID=$!
          (while true; do if [[ -f "/tmp/pod/main-terminated" ]]; then kill $CHILD_PID; fi; sleep 1; done) &
          wait $CHILD_PID
          if [[ -f "/tmp/pod/main-terminated" ]]; then exit 0; fi
      volumeMounts:
        - { name: pim, mountPath: /home/jenkins }
        - { name: tmp-pod, mountPath: /tmp/pod, readOnly: true }
      resources:
        requests: {cpu: "100m", memory: "200Mi"}
    - name: elasticsearch
      image: docker.elastic.co/elasticsearch/elasticsearch:5.5.2
      command: ["/bin/bash", "-c"]
      args:
        - |
          /usr/share/elasticsearch/bin/es-docker &
          CHILD_PID=$!
          (while true; do if [[ -f "/tmp/pod/main-terminated" ]]; then kill $CHILD_PID; fi; sleep 1; done) &
          wait $CHILD_PID
          if [[ -f "/tmp/pod/main-terminated" ]]; then exit 0; fi
      env:
        - { name: ES_JAVA_OPTS, value: "-Xms1g -Xmx1g" }
      volumeMounts:
        - { name: tmp-pod, mountPath: /tmp/pod, readOnly: true }
      resources:
        requests: {cpu: "100m", memory: "1500Mi"}
      readinessProbe:
        httpGet:
          path: /
          port: 9200
          httpHeaders:
            - name: Authorization
              value: Basic ZWxhc3RpYzpjaGFuZ2VtZQ==
        timeoutSeconds: 1
        initialDelaySeconds: 5
    - name: pubsub
      image: eu.gcr.io/akeneo-ci/gcloud:1.0
      imagePullPolicy: Always

      command: ["/bin/sh", "-c"]
      args:
        - |
          tail -f /dev/null &
          CHILD_PID=$!
          (while true; do if [[ -f "/tmp/pod/main-terminated" ]]; then kill $CHILD_PID; fi; sleep 1; done) &
          wait $CHILD_PID
          if [[ -f "/tmp/pod/main-terminated" ]]; then exit 0; fi
      env:
        - { name: REDIS_URI, value: "tcp://redis.jenkins:6379" }
        - { name: POD_NAME, valueFrom: { fieldRef: { fieldPath: metadata.name } } }
        - { name: NAMESPACE, valueFrom: { fieldRef: { fieldPath: metadata.namespace } } }
      volumeMounts:
        - { name: pim, mountPath: /home/jenkins }
        - { name: tmp-pod, mountPath: /tmp/pod }
      resources:
        requests: {cpu: "100m", memory: "100Mi"}
  volumes:
    - { name: pim, emptyDir: {medium: Memory}}
    - { name: tmp-pod, emptyDir: {medium: Memory}}
    - { name: mysql, emptyDir: {medium: Memory}}
    - { name: docker-socket, hostPath: { path: /var/run/docker.sock }}
    - { name: docker-exec, hostPath: { path: /usr/bin/docker }}
  restartPolicy: Never
