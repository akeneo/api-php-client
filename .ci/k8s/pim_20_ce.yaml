apiVersion: batch/v1
kind: Job
metadata:
  name: JOB_NAME
spec:
  completions: JOB_COMPLETIONS
  parallelism: JOB_SCALE
  template:
    spec:
      hostAliases:
      - ip: "127.0.0.1"
        hostnames:
        - "akeneo"
        - "akeneo.dev"
        - "akeneo-pim"
        - "mysql"
      initContainers:
        - name: php-api-client-data
          image: PHP_API_CLIENT_DATA_IMAGE
          command: ['sh', '-c', 'tar -xf /data/data.tar.gz -C /home/jenkins/php-api-client']
          volumeMounts:
            - { name: php-api-client-data, mountPath: /home/jenkins/php-api-client }
        - name: pim-data
          image: PIM_DATA_IMAGE
          command: ['sh', '-c', 'tar -xf /data/data.tar.gz -C /home/jenkins/pim']
          volumeMounts:
            - { name: pim-data, mountPath: /home/jenkins/pim }
        - name: httpd-conf
          image: HTTPD_CONF_IMAGE
          command: ['sh', '-c', 'tar -xf /data/data.tar.gz -C /usr/local/apache2/conf']
          volumeMounts:
            - { name: httpd-conf, mountPath: /usr/local/apache2/conf }
        - name: mysql-data
          image: MYSQL_DATA_IMAGE
          command: ['sh', '-c', 'tar -xf /data/data.tar.gz -C /var/lib/mysql']
          volumeMounts:
            - { name: mysql-data, mountPath: /var/lib/mysql }
        - name: elasticsearch-data
          image: ELASTICSEARCH_DATA_IMAGE
          command: ['sh', '-c', 'tar -xf /data/data.tar.gz -C /usr/share/elasticsearch/data']
          volumeMounts:
            - { name: elasticsearch-data, mountPath: /usr/share/elasticsearch/data }
      containers:
        - name: php-api
          image: akeneo/php:PHP_API_VERSION
          imagePullPolicy: Always
          command: ["/bin/bash", "-c"]
          args:
            - |
              tail -f /dev/null &
              CHILD_PID=$!
              (while true; do if [[ -f "/tmp/pod/main-terminated" ]]; then kill $CHILD_PID; fi; sleep 1; done) &
              wait $CHILD_PID
              if [[ -f "/tmp/pod/main-terminated" ]]; then exit 0; fi
          workingDir: /home/jenkins/php-api-client
          volumeMounts:
            - { name: php-api-client-data, mountPath: /home/jenkins/php-api-client }
            - { name: pim-data, mountPath: /home/jenkins/pim }
            - { name: tmp-pod, mountPath: /tmp/pod, readOnly: true }
            - { name: docker-socket, mountPath: /var/run/docker.sock }
            - { name: docker-exec, mountPath: /usr/bin/docker }
          resources:
            requests: {cpu: "300m", memory: "300Mi"}
        - name: php
          image: eu.gcr.io/akeneo-ci/php:7.1-fpm
          imagePullPolicy: Always
          command: ["/bin/bash", "-c"]
          args:
            - |
              php-fpm &
              CHILD_PID=$!
              (while true; do if [[ -f "/tmp/pod/main-terminated" ]]; then kill $CHILD_PID; fi; sleep 1; done) &
              wait $CHILD_PID
              if [[ -f "/tmp/pod/main-terminated" ]]; then exit 0; fi
          workingDir: /home/jenkins/pim
          volumeMounts:
            - { name: pim-data, mountPath: /home/jenkins/pim }
            - { name: tmp-pod, mountPath: /tmp/pod, readOnly: true }
          resources:
            requests: {cpu: "300m", memory: "300Mi"}
        - name: httpd
          image: eu.gcr.io/akeneo-ci/httpd:2.4
          imagePullPolicy: Always
          command: ["/bin/bash", "-c"]
          args:
            - |
              httpd-foreground &
              CHILD_PID=$!
              (while true; do if [[ -f "/tmp/pod/main-terminated" ]]; then kill $CHILD_PID; fi; sleep 1; done) &
              wait $CHILD_PID
              if [[ -f "/tmp/pod/main-terminated" ]]; then exit 0; fi
          volumeMounts:
            - { name: pim-data, mountPath: /home/jenkins/pim }
            - { name: httpd-conf, mountPath: /usr/local/apache2/conf }
            - { name: tmp-pod, mountPath: /tmp/pod, readOnly: true }
          resources:
            requests: {cpu: "100m", memory: "200Mi"}
        - name: mysql
          image: eu.gcr.io/akeneo-ci/mysql:5.7
          imagePullPolicy: Always
          command: ["/bin/bash", "-c"]
          args:
            - |
              /usr/local/bin/mysql-killer.sh &
              disown
              /usr/local/bin/docker-entrypoint.sh mysqld
          env:
            - { name: MYSQL_ROOT_PASSWORD, value: root }
            - { name: MYSQL_USER, value: akeneo_pim }
            - { name: MYSQL_PASSWORD, value: akeneo_pim }
            - { name: MYSQL_DATABASE, value: akeneo_pim }
          readinessProbe:
            timeoutSeconds: 5
            initialDelaySeconds: 5
            failureThreshold: 30
            exec:
              command: ["mysql", "-proot", "-h", "127.0.0.1", "-e", "SELECT 1"]
          volumeMounts:
            - { name: mysql-data, mountPath: /var/lib/mysql }
            - { name: tmp-pod, mountPath: /tmp/pod, readOnly: true }
          resources:
            requests: {cpu: "100m", memory: "700Mi"}
        - name: elasticsearch
          image: eu.gcr.io/akeneo-cloud/elasticsearch:v5.6.4-0
          imagePullPolicy: Always
          command: ["su", "elasticsearch", "-c"]
          args:
            - |
              cd /usr/share/elasticsearch && ./bin/es-docker &
              CHILD_PID=$!
              (while true; do if [[ -f "/tmp/pod/main-terminated" ]]; then kill $CHILD_PID; fi; sleep 1; done) &
              wait $CHILD_PID
              if [[ -f "/tmp/pod/main-terminated" ]]; then exit 0; fi
          env:
            - { name: ES_JAVA_OPTS, value: "-Xms1g -Xmx1g" }
          volumeMounts:
            - { name: elasticsearch-data, mountPath: /usr/share/elasticsearch/data }
            - { name: tmp-pod, mountPath: /tmp/pod, readOnly: true }
          resources:
            requests: {cpu: "100m", memory: "1500Mi"}
          readinessProbe:
            httpGet:
              path: /
              port: 9200
              httpHeaders:
                - name: Authorization
                  value: Basic ZWxhc3RpYzpjaGFuZ2VtZQ==
            timeoutSeconds: 1
            initialDelaySeconds: 5
        - name: pubsub
          image: eu.gcr.io/akeneo-ci/gcloud:1.0.17
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          args:
            - |
              trap "touch /tmp/pod/main-terminated" EXIT
              gcloud.phar pubsub:message:consume SUBSCRIPTION_NAME RESULT_TOPIC
          env:
            - { name: REDIS_URI, value: "tcp://redis.jenkins-prod:6379" }
            - { name: POD_NAME, valueFrom: { fieldRef: { fieldPath: metadata.name } } }
            - { name: NAMESPACE, valueFrom: { fieldRef: { fieldPath: metadata.namespace } } }
          volumeMounts:
            - { name: php-api-client-data, mountPath: /home/jenkins/php-api-client }
            - { name: tmp-pod, mountPath: /tmp/pod }
          resources:
            requests: {cpu: "100m", memory: "100Mi"}
      volumes:
        - { name: php-api-client-data, emptyDir: {medium: Memory}}
        - { name: pim-data, emptyDir: {medium: Memory}}
        - { name: httpd-conf, emptyDir: {medium: Memory}}
        - { name: mysql-data, emptyDir: {medium: Memory}}
        - { name: elasticsearch-data, emptyDir: {medium: Memory}}
        - { name: tmp-pod, emptyDir: {medium: Memory}}
        - { name: docker-socket, hostPath: { path: /var/run/docker.sock }}
        - { name: docker-exec, hostPath: { path: /usr/bin/docker }}
      restartPolicy: Never
